{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nconst CREATE_SCRIPT_TAG = gql`\nmutation scriptTagCreate($input: ScriptTagInput!) {\n    scriptTagCreate(input: $input) {\n      scriptTag {\n        id\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst Query_SCRIPTING = gql`\nquery{\n  scriptTags(first:5){\n    edges{\n      node {\n        id\n        src\n      }\n    }\n  }\n}\n`;\n\nconst ScriptPage = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(Query_SCRIPTING);\n  if (loading) return __jsx(\"div\", null, \"loading....\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(data);\n  return __jsx(\"div\", null, \"Hello from Script Page\");\n};\n\nexport default ScriptPage;","map":{"version":3,"sources":["C:/Users/ghori/Desktop/Shopify App/shopify-start-app/pages/script-page.js"],"names":["React","gql","useQuery","useMutation","CREATE_SCRIPT_TAG","Query_SCRIPTING","ScriptPage","loading","error","data","message","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,qBAAnC;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;CAA9B;AAaA,MAAMI,eAAe,GAAGJ,GAAI;;;;;;;;;;;CAA5B;;AAaA,MAAMK,UAAU,GAAG,MAAM;AACvB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAAuBP,QAAQ,CAACG,eAAD,CAArC;AACA,MAAGE,OAAH,EAAY,OAAO,iCAAP;AACZ,MAAGC,KAAH,EAAU,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACE,SACI,4CADJ;AAKH,CAVD;;AAYA,eAAeH,UAAf","sourcesContent":["import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useQuery,useMutation} from '@apollo/react-hooks'\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\nmutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Query_SCRIPTING = gql`\r\nquery{\r\n  scriptTags(first:5){\r\n    edges{\r\n      node {\r\n        id\r\n        src\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst ScriptPage = () => {\r\n  const {loading,error,data} = useQuery(Query_SCRIPTING)\r\n  if(loading) return <div>loading....</div>\r\n  if(error) return <div>{error.message}</div>\r\n  console.log(data)\r\n    return (\r\n        <div>\r\n            Hello from Script Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScriptPage\r\n"]},"metadata":{},"sourceType":"module"}