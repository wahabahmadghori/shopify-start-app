{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nconst GET_PRODUCTS_BY_IDS = gql`\nquery getProducts($ids:[ID!]!){\n\tnodes(ids:$ids){\n    ...on Product{\n      title\n      handle\n      id\n      images(first:1){\n        edges{\n          node{\n            originalSrc\n            altText\n          }\n        }\n      }\n      variants(first:1){\n        edges{\n          node{\n            price\n            id\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nfunction ProductList() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PRODUCTS_BY_IDS, {\n    variables: {\n      ids: store.get('ids')\n    }\n  });\n\n  if (loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", null, error.message);\n  }\n\n  console.log('data: ', data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    resourceName: {\n      singular: 'customer',\n      plural: 'customers'\n    },\n    items: data.nodes,\n    renderItem: item => {\n      const media = __jsx(Thumbnail, {\n        source: \"{item.images.edges[0].node.originalSrc}\",\n        alt: \"{item.images.edges[0].node.altText}\",\n        size: \"small\"\n      });\n\n      return __jsx(ResourceItem, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: `View details for ${item.title}`\n      });\n    }\n  }));\n}\n\nexport default ProductList;","map":{"version":3,"sources":["C:/Users/ghori/Desktop/Shopify App/shopify-start-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_IDS","ProductList","loading","error","data","variables","ids","get","message","console","log","singular","plural","nodes","item","media","id","title"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,IAAR,EAAaC,YAAb,EAA0BC,KAA1B,EAAgCC,SAAhC,EAA0CC,SAA1C,QAA0D,kBAA1D;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,MAAMC,mBAAmB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;CAAhC;;AA2BA,SAASS,WAAT,GAAsB;AACpB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAAuBX,QAAQ,CAACO,mBAAD,EAAqB;AAACK,IAAAA,SAAS,EAAC;AAACC,MAAAA,GAAG,EAACP,KAAK,CAACQ,GAAN,CAAU,KAAV;AAAL;AAAX,GAArB,CAArC;;AACA,MAAGL,OAAH,EAAW;AAAC,WAAO,gCAAP;AAA6B;;AACzC,MAAGC,KAAH,EAAS;AAAC,WAAO,mBAAMA,KAAK,CAACK,OAAZ,CAAP;AAAkC;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBN,IAArB;AACA,SACE,MAAC,IAAD,QACF,MAAC,YAAD;AACE,IAAA,YAAY,EAAE;AAACO,MAAAA,QAAQ,EAAE,UAAX;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KADhB;AAEE,IAAA,KAAK,EAAER,IAAI,CAACS,KAFd;AAGE,IAAA,UAAU,EAAGC,IAAD,IAAU;AACpB,YAAMC,KAAK,GACT,MAAC,SAAD;AAAW,QAAA,MAAM,EAAC,yCAAlB;AACC,QAAA,GAAG,EAAC,qCADL;AAEC,QAAA,IAAI,EAAC;AAFN,QADF;;AAKA,aACE,MAAC,YAAD;AACE,QAAA,EAAE,EAAED,IAAI,CAACE,EADX;AAEE,QAAA,KAAK,EAAED,KAFT;AAGE,QAAA,kBAAkB,EAAG,oBAAmBD,IAAI,CAACG,KAAM;AAHrD,QADF;AAQD;AAjBH,IADE,CADF;AAuBD;;AAED,eAAehB,WAAf","sourcesContent":["import gql from 'graphql-tag'\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport {Card,ResourceList,Stack,TextStyle,Thumbnail} from '@shopify/polaris'\r\nimport store from 'store-js'\r\n\r\nconst GET_PRODUCTS_BY_IDS = gql`\r\nquery getProducts($ids:[ID!]!){\r\n\tnodes(ids:$ids){\r\n    ...on Product{\r\n      title\r\n      handle\r\n      id\r\n      images(first:1){\r\n        edges{\r\n          node{\r\n            originalSrc\r\n            altText\r\n          }\r\n        }\r\n      }\r\n      variants(first:1){\r\n        edges{\r\n          node{\r\n            price\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\nfunction ProductList(){\r\n  const {loading,error,data} = useQuery(GET_PRODUCTS_BY_IDS,{variables:{ids:store.get('ids')}})\r\n  if(loading){return <div>loading...</div>}\r\n  if(error){return <div>{error.message}</div>}\r\n  console.log('data: ',data)\r\n  return(\r\n    <Card>\r\n  <ResourceList\r\n    resourceName={{singular: 'customer', plural: 'customers'}}\r\n    items={data.nodes}\r\n    renderItem={(item) => {\r\n      const media = (\r\n        <Thumbnail source=\"{item.images.edges[0].node.originalSrc}\"\r\n         alt=\"{item.images.edges[0].node.altText}\" \r\n         size=\"small\" />\r\n      );\r\n      return (\r\n        <ResourceItem\r\n          id={item.id}\r\n          media={media}\r\n          accessibilityLabel={`View details for ${item.title}`}\r\n        >\r\n        </ResourceItem>\r\n      );\r\n    }}\r\n  />\r\n</Card>\r\n  )\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}