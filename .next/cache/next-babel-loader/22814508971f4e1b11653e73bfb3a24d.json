{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nquery{\\n  scriptTags(first:5){\\n    edges{\\n      node {\\n        id\\n        src\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation scriptTagCreate($input: ScriptTagInput!) {\\n    scriptTagCreate(input: $input) {\\n      scriptTag {\\n        id\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar Query_SCRIPTING = gql(_templateObject2());\n\nvar ScriptPage = function ScriptPage() {\n  _s();\n\n  var _useQuery = useQuery(Query_SCRIPTING),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"loading....\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(data);\n  return __jsx(\"div\", null, \"Hello from Script Page\");\n};\n\n_s(ScriptPage, \"t0z2SrXJDzhl3h6STsA86t9Oe1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["C:/Users/ghori/Desktop/Shopify App/shopify-start-app/pages/script-page.js"],"names":["React","gql","useQuery","useMutation","CREATE_SCRIPT_TAG","Query_SCRIPTING","ScriptPage","loading","error","data","message","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAiBC,WAAjB,QAAmC,qBAAnC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAaA,IAAMI,eAAe,GAAGJ,GAAH,oBAArB;;AAaA,IAAMK,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAAA,kBACMJ,QAAQ,CAACG,eAAD,CADd;AAAA,MAChBE,OADgB,aAChBA,OADgB;AAAA,MACRC,KADQ,aACRA,KADQ;AAAA,MACFC,IADE,aACFA,IADE;;AAEvB,MAAGF,OAAH,EAAY,OAAO,iCAAP;AACZ,MAAGC,KAAH,EAAU,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACE,SACI,4CADJ;AAKH,CAVD;;GAAMH,U;UACyBJ,Q;;;KADzBI,U;AAYN,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport gql from 'graphql-tag'\r\nimport {useQuery,useMutation} from '@apollo/react-hooks'\r\n\r\nconst CREATE_SCRIPT_TAG = gql`\r\nmutation scriptTagCreate($input: ScriptTagInput!) {\r\n    scriptTagCreate(input: $input) {\r\n      scriptTag {\r\n        id\r\n      }\r\n      userErrors {\r\n        field\r\n        message\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Query_SCRIPTING = gql`\r\nquery{\r\n  scriptTags(first:5){\r\n    edges{\r\n      node {\r\n        id\r\n        src\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst ScriptPage = () => {\r\n  const {loading,error,data} = useQuery(Query_SCRIPTING)\r\n  if(loading) return <div>loading....</div>\r\n  if(error) return <div>{error.message}</div>\r\n  console.log(data)\r\n    return (\r\n        <div>\r\n            Hello from Script Page\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScriptPage\r\n"]},"metadata":{},"sourceType":"module"}