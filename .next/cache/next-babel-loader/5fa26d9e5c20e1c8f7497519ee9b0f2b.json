{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids:[ID!]!){\\n\\tnodes(ids:$ids){\\n    ...on Product{\\n      title\\n      handle\\n      id\\n      images(first:1){\\n        edges{\\n          node{\\n            originalSrc\\n            altText\\n          }\\n        }\\n      }\\n      variants(first:1){\\n        edges{\\n          node{\\n            price\\n            id\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, ResourceItem, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_IDS = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_IDS, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) {\n    return __jsx(\"div\", null, \"loading...\");\n  }\n\n  if (error) {\n    return __jsx(\"div\", null, error.message);\n  }\n\n  console.log('data: ', data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: \"true\",\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: function renderItem(item) {\n      var media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\",\n        alt: item.images.edges[0] ? item.images.edges[0].node.altText : \"\",\n        size: \"small\"\n      });\n\n      return __jsx(ResourceItem, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: \"View details for \".concat(item.title)\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h2\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", item.images.variants[0].node.price))));\n    }\n  }));\n}\n\n_s(ProductList, \"t0z2SrXJDzhl3h6STsA86t9Oe1U=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["C:/Users/ghori/Desktop/Shopify App/shopify-start-app/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","ResourceItem","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_IDS","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","id","title","variants","price"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,SAAQC,IAAR,EAAaC,YAAb,EAA0BC,YAA1B,EAAuCC,KAAvC,EAA6CC,SAA7C,EAAuDC,SAAvD,QAAuE,kBAAvE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,mBAAmB,GAAGT,GAAH,mBAAzB;;AA2BA,SAASU,WAAT,GAAsB;AAAA;;AAAA,kBACST,QAAQ,CAACQ,mBAAD,EAAqB;AAACE,IAAAA,SAAS,EAAC;AAACC,MAAAA,GAAG,EAACJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAL;AAAX,GAArB,CADjB;AAAA,MACbC,OADa,aACbA,OADa;AAAA,MACLC,KADK,aACLA,KADK;AAAA,MACCC,IADD,aACCA,IADD;;AAEpB,MAAGF,OAAH,EAAW;AAAC,WAAO,gCAAP;AAA6B;;AACzC,MAAGC,KAAH,EAAS;AAAC,WAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAAkC;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBH,IAArB;AACA,SACE,MAAC,IAAD,QACF,MAAC,YAAD;AACE,IAAA,UAAU,EAAC,MADb;AAEE,IAAA,YAAY,EAAE;AAACI,MAAAA,QAAQ,EAAE,SAAX;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAFhB;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACM,KAHd;AAIE,IAAA,UAAU,EAAE,oBAACC,IAAD,EAAU;AACpB,UAAMC,KAAK,GACT,MAAC,SAAD;AACA,QAAA,MAAM,EAAED,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAqBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAA/C,GAA2D,EADnE;AAEC,QAAA,GAAG,EAAEL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAqBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BE,OAA/C,GAAuD,EAF7D;AAGC,QAAA,IAAI,EAAC;AAHN,QADF;;AAMA,aACE,MAAC,YAAD;AACE,QAAA,EAAE,EAAEN,IAAI,CAACO,EADX;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,kBAAkB,6BAAsBD,IAAI,CAACQ,KAA3B;AAHpB,SAKE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACE,kBACA,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SAA+BR,IAAI,CAACQ,KAApC,CADA,CADF,CADF,EAME,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKR,IAAI,CAACE,MAAL,CAAYO,QAAZ,CAAqB,CAArB,EAAwBL,IAAxB,CAA6BM,KAAlC,CADF,CANF,CALF,CADF;AAkBD;AA7BH,IADE,CADF;AAmCD;;GAxCQvB,W;UACsBT,Q;;;KADtBS,W;AA0CT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag'\r\nimport {useQuery} from '@apollo/react-hooks'\r\nimport {Card,ResourceList,ResourceItem,Stack,TextStyle,Thumbnail} from '@shopify/polaris'\r\nimport store from 'store-js'\r\n\r\nconst GET_PRODUCTS_BY_IDS = gql`\r\nquery getProducts($ids:[ID!]!){\r\n\tnodes(ids:$ids){\r\n    ...on Product{\r\n      title\r\n      handle\r\n      id\r\n      images(first:1){\r\n        edges{\r\n          node{\r\n            originalSrc\r\n            altText\r\n          }\r\n        }\r\n      }\r\n      variants(first:1){\r\n        edges{\r\n          node{\r\n            price\r\n            id\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\nfunction ProductList(){\r\n  const {loading,error,data} = useQuery(GET_PRODUCTS_BY_IDS,{variables:{ids:store.get('ids')}})\r\n  if(loading){return <div>loading...</div>}\r\n  if(error){return <div>{error.message}</div>}\r\n  console.log('data: ',data)\r\n  return(\r\n    <Card>\r\n  <ResourceList\r\n    showHeader=\"true\"\r\n    resourceName={{singular: 'Product', plural: 'Products'}}\r\n    items={data.nodes}\r\n    renderItem={(item) => {\r\n      const media = (\r\n        <Thumbnail \r\n        source={item.images.edges[0]?item.images.edges[0].node.originalSrc:\"\"}\r\n         alt={item.images.edges[0]?item.images.edges[0].node.altText:\"\"} \r\n         size=\"small\" />\r\n      );\r\n      return (\r\n        <ResourceItem\r\n          id={item.id}\r\n          media={media}\r\n          accessibilityLabel={`View details for ${item.title}`}\r\n        >\r\n          <Stack>\r\n            <Stack.Item fill>\r\n              <h2>\r\n              <TextStyle variation=\"strong\">{item.title}</TextStyle>\r\n              </h2>\r\n            </Stack.Item>\r\n            <Stack.Item>\r\n              <p>${item.images.variants[0].node.price}</p>\r\n            </Stack.Item>\r\n        </Stack>\r\n        </ResourceItem>\r\n      );\r\n    }}\r\n  />\r\n</Card>\r\n  )\r\n}\r\n\r\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}